@model BasketTotalDto
@{
    decimal rate = (decimal)Model.DiscountRate;
}
<div class="bg-light p-30 mb-5">
    <div class="border-bottom">
        <h6 class="mb-3">Sepetteki Ürünler</h6>
        @foreach (var item in Model.BasketItems)
        {
            <div class="d-flex justify-content-between">
                <p>@item.ProductName (@item.Quantity Adet)</p>
                <p>@(item.Price*item.Quantity) ₺</p>
            </div>
        }
       
      
    </div>
    <div class="border-bottom pt-3 pb-2">
        <div class="d-flex justify-content-between mb-3">
            <h6>Sipariş Toplamı</h6>
            <h6>@(Model.DiscountRate > 0 ? ((Model.TotalPrice * (decimal)(1 - rate / 100) * (decimal)1.20)) : ((Model.TotalPrice * (decimal)1.20).ToString("00.00"))) ₺</h6>
        </div>
        <div class="d-flex justify-content-between">
            <h6 class="font-weight-medium">Kargo Ücreti</h6>
            <h6 class="font-weight-medium">30 ₺</h6>
        </div>
    </div>
    <div class="pt-2">
        <div class="d-flex justify-content-between mt-2">
            <h5>Ödenecek Tutar</h5>
            <h5>@(Model.DiscountRate > 0 ? ((Model.TotalPrice * (decimal)(1 - rate / 100) * (decimal)1.20) +30) : (((Model.TotalPrice * (decimal)1.20)+30).ToString("00.00") )) ₺</h5>
        </div>
    </div>
</div>